<?php

/*
 * This file is part of the Sonatra package.
 *
 * (c) François Pluchino <francois.pluchino@sonatra.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Sonatra\Bundle\GluonBundle\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

/**
 * This is the class that validates and merges configuration from your app/config files.
 *
 * @author François Pluchino <francois.pluchino@sonatra.com>
 */
class Configuration implements ConfigurationInterface
{
    /**
     * {@inheritdoc}
     */
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $rootNode = $treeBuilder->root('sonatra_gluon');

        $rootNode
            ->append($this->getFontNode())
            ->append($this->getFontAwesomeNode())
            ->append($this->getCommonAssetsNode())
        ;

        return $treeBuilder;
    }

    /**
     * Get fonts node.
     *
     * @return NodeDefinition
     */
    private function getFontNode()
    {
        $treeBuilder = new TreeBuilder();
        $node = $treeBuilder->root('font');

        $node
            ->addDefaultsIfNotSet()
            ->canBeDisabled()
            ->children()
                ->arrayNode('open_sans')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('light')->defaultFalse()->end()
                        ->booleanNode('light_italic')->defaultFalse()->end()
                        ->booleanNode('normal')->defaultTrue()->end()
                        ->booleanNode('normal_italic')->defaultTrue()->end()
                        ->booleanNode('semi_bold')->defaultTrue()->end()
                        ->booleanNode('semi_bold_italic')->defaultTrue()->end()
                        ->booleanNode('bold')->defaultFalse()->end()
                        ->booleanNode('bold_italic')->defaultFalse()->end()
                        ->booleanNode('extra_bold')->defaultFalse()->end()
                        ->booleanNode('extra_bold_italic')->defaultFalse()->end()
                    ->end()
                ->end()
                ->arrayNode('raleway')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('thin')->defaultTrue()->end()
                        ->booleanNode('extra_light')->defaultTrue()->end()
                        ->booleanNode('light')->defaultFalse()->end()
                        ->booleanNode('normal')->defaultFalse()->end()
                        ->booleanNode('medium')->defaultFalse()->end()
                        ->booleanNode('semi_bold')->defaultFalse()->end()
                        ->booleanNode('bold')->defaultFalse()->end()
                        ->booleanNode('extra_bold')->defaultFalse()->end()
                        ->booleanNode('ultra_bold')->defaultFalse()->end()
                    ->end()
                ->end()
            ->end()
        ;

        return $node;
    }

    /**
     * Get font awesome node.
     *
     * @return NodeDefinition
     */
    private function getFontAwesomeNode()
    {
        $treeBuilder = new TreeBuilder();
        $node = $treeBuilder->root('font_awesome');

        $node
            ->addDefaultsIfNotSet()
            ->fixXmlConfig('path')
            ->children()
                ->arrayNode('font')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('paths')
                            ->addDefaultChildrenIfNoneSet()
                            ->prototype('scalar')->defaultValue('%kernel.root_dir%/../vendor/fortawesome/font-awesome/fonts')->end()
                            ->example(array('%kernel.root_dir%/../vendor/fortawesome/font-awesome/fonts', '%kernel.root_dir%/../vendor/foo/bar/fonts'))
                            ->validate()
                                ->ifTrue(function ($v) { return !in_array('%kernel.root_dir%/../vendor/fortawesome/font-awesome/fonts', $v); })
                                ->then(function ($v) {
                                    return array_merge(array('%kernel.root_dir%/../vendor/fortawesome/font-awesome/fonts'), $v);
                                })
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->booleanNode('build')->defaultTrue()->end()
                ->scalarNode('cache_directory')->defaultValue('%kernel.cache_dir%/sonatra_gluon/less')->end()
                ->scalarNode('directory')->defaultValue('%kernel.root_dir%/../vendor/fortawesome/font-awesome/less')->end()
                ->arrayNode('components')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('variables')->defaultValue('@SonatraGluonBundle/Resources/assetic/less/font-awesome-variables.less')->end()
                        ->scalarNode('custom_variables')->defaultNull()->end()
                        ->booleanNode('mixins')->defaultTrue()->end()
                        ->scalarNode('custom_mixins')->defaultNull()->end()
                        ->booleanNode('path')->defaultTrue()->end()
                        ->booleanNode('core')->defaultTrue()->end()
                        ->booleanNode('larger')->defaultTrue()->end()
                        ->booleanNode('fixed_width')->defaultTrue()->end()
                        ->booleanNode('list')->defaultFalse()->end()
                        ->booleanNode('bordered_pulled')->defaultFalse()->end()
                        ->booleanNode('spinning')->defaultTrue()->end()
                        ->booleanNode('rotated_flipped')->defaultTrue()->end()
                        ->booleanNode('stacked')->defaultFalse()->end()
                        ->booleanNode('icons')->defaultTrue()->end()
                    ->end()
                ->end()
            ->end()
        ;

        return $node;
    }

    /**
     * Get common assets node.
     *
     * @return NodeDefinition
     */
    private function getCommonAssetsNode()
    {
        $treeBuilder = new TreeBuilder();
        $node = $treeBuilder->root('common_assets');

        $node
            ->addDefaultsIfNotSet()
            ->canBeDisabled()
            ->children()
                ->arrayNode('stylesheets')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('slickgrid')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('slick_grid')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.grid.css')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.grid.css'; })
                                    ->end()
                                ->end()
                                ->scalarNode('slick_default_theme')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick-default-theme.css'; })
                                    ->end()
                                ->end()
                                ->arrayNode('controls')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('slick_columnpicker')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/controls/slick.columnpicker.css'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_pager')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/controls/slick.pager.css'; })
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                                ->arrayNode('plugins')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('slick_headerbuttons')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.headerbuttons.css'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_headermenu')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.headermenu.css'; })
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('sonatra_slickgrid')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->arrayNode('controls')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('pager')
                                            ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/css/sonatra.slickgrid.pager.css')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/css/sonatra.slickgrid.pager.css'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('loading')
                                            ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/css/sonatra.slickgrid.loading.css')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/css/sonatra.slickgrid.loading.css'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('checkboxselectcolumn')
                                            ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/css/sonatra.slickgrid.checkboxselectcolumn.css')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/css/sonatra.slickgrid.checkboxselectcolumn.css'; })
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('sonatra_form_extensions')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->arrayNode('select2')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('select2')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_ivaynberg/select2/select2.css'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('select2_bootstrap')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_ivaynberg/select2/select2-bootstrap.css'; })
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('theme_stylesheets')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('cache_directory')->defaultValue('%kernel.cache_dir%/sonatra_gluon/less')->end()
                        ->scalarNode('directory')->defaultValue('@SonatraGluonBundle/Resources/assetic/less')->end()
                        ->scalarNode('variables')->defaultValue('@SonatraGluonBundle/Resources/assetic/less/variables.less')->end()
                        ->scalarNode('mixins')->defaultValue('@SonatraGluonBundle/Resources/assetic/less/mixins.less')->end()
                        ->arrayNode('components')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->booleanNode('wrapper')->defaultTrue()->end()
                                ->booleanNode('global')->defaultTrue()->end()
                                ->booleanNode('type')->defaultTrue()->end()
                                ->booleanNode('forms')->defaultTrue()->end()
                                ->booleanNode('buttons')->defaultTrue()->end()
                                ->booleanNode('dropdowns')->defaultTrue()->end()
                                ->booleanNode('input_groups')->defaultTrue()->end()
                                ->booleanNode('navs')->defaultTrue()->end()
                                ->booleanNode('navbar')->defaultTrue()->end()
                                ->booleanNode('labels')->defaultTrue()->end()
                                ->booleanNode('progress_bars')->defaultTrue()->end()
                                ->booleanNode('panels')->defaultTrue()->end()
                                ->booleanNode('blocks')->defaultTrue()->end()
                                ->booleanNode('sidebar')->defaultTrue()->end()
                                ->booleanNode('forms_select2')->defaultTrue()->end()
                                ->scalarNode('datetime_picker')->defaultValue('@SonatraFormExtensionsBundle/Resources/assetic/less/datetime-picker.less')->end()
                                ->scalarNode('hammer_scroll')->defaultValue('@SonatraGluonBundle/Resources/assetic/less/hammer-scroll.less')->end()
                                ->booleanNode('account')->defaultTrue()->end()
                                ->booleanNode('errors')->defaultTrue()->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('javascripts')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->arrayNode('markusslima')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('bootstrap_filestyle')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_markusslima/bootstrap-filestyle/src/bootstrap-filestyle.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_markusslima/bootstrap-filestyle/src/bootstrap-filestyle.js'; })
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('eightmedia')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('hammer')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_eightmedia/hammer-js/hammer.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_eightmedia/hammer-js/hammer.js'; })
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('moment')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('moment')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_moment/moment/moment.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_moment/moment/moment.js'; })
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('threedubmedia')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('event_drag')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/event.drag/jquery.event.drag.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/event.drag/jquery.event.drag.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('event_drag_live')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/event.drag/jquery.event.drag.live.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('event_drop')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/event.drop/jquery.event.drop.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('event_drop_live')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/event.drop/jquery.event.drop.live.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('event_keyend')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/event.keyend/jquery.event.keyend.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('event_linger')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/event.linger/jquery.event.linger.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('event_wheel')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/event.wheel/jquery.event.wheel.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('fire')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_threedubmedia/jquery-threedubmedia/fire/jquery.fire.js'; })
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('carhartl')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('jquery_cookie')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_carhartl/jquery-cookie/jquery.cookie.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_carhartl/jquery-cookie/jquery.cookie.js'; })
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('slickgrid')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('slick_core')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.core.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.core.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('slick_grid')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.grid.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.grid.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('slick_dataview')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.dataview.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('slick_formatters')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.formatters.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('slick_editors')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.editors.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('slick_groupitemmetadataprovider')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.groupitemmetadataprovider.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('slick_remotemodel')
                                    ->defaultFalse()
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/slick.remotemodel.js'; })
                                    ->end()
                                ->end()
                                ->arrayNode('controls')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('slick_columnpicker')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/controls/slick.columnpicker.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_pager')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/controls/slick.pager.js'; })
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                                ->arrayNode('plugins')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('slick_autotooltips')
                                            ->defaultValue('%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.autotooltips.js')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.autotooltips.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_cellcopymanager')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.cellcopymanager.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_cellrangedecorator')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.cellrangedecorator.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_cellselectionmodel')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.cellselectionmodel.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_checkboxselectcolumn')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.checkboxselectcolumn.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_headerbuttons')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.headerbuttons.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_headermenu')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.headermenu.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_rowmovemanager')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.rowmovemanager.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('slick_rowselectionmodel')
                                            ->defaultFalse()
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_mleibman/slick-grid/plugins/slick.rowselectionmodel.js'; })
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('sonatra_gluon')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('sidebar')
                                    ->defaultValue('@SonatraGluonBundle/Resources/assetic/js/sidebar.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '@SonatraGluonBundle/Resources/assetic/js/sidebar.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('sticky_header')
                                    ->defaultValue('@SonatraGluonBundle/Resources/assetic/js/sticky-header.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '@SonatraGluonBundle/Resources/assetic/js/sticky-header.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('hammer_scroll')
                                    ->defaultValue('@SonatraGluonBundle/Resources/assetic/js/hammer-scroll.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '@SonatraGluonBundle/Resources/assetic/js/hammer-scroll.js'; })
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('sonatra_slickgrid')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('ajaxdataview')
                                    ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/js/st.slickgrid.ajaxdataview.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/js/st.slickgrid.ajaxdataview.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('formatters')
                                    ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/js/st.slickgrid.formatters.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/js/st.slickgrid.formatters.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('slick_grid')
                                    ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/js/st.slickgrid.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/js/st.slickgrid.js'; })
                                    ->end()
                                ->end()
                                ->arrayNode('controls')
                                    ->addDefaultsIfNotSet()
                                    ->children()
                                        ->scalarNode('pager')
                                            ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.pager.js')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.pager.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('loading')
                                            ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.loading.js')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.loading.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('checkboxselectcolumn')
                                            ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.checkboxselectcolumn.js')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.checkboxselectcolumn.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('rownumber')
                                            ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.rownumber.js')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.rownumber.js'; })
                                            ->end()
                                        ->end()
                                        ->scalarNode('tbmodal')
                                            ->defaultValue('@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.tbmodal.js')
                                            ->beforeNormalization()
                                            ->ifTrue(function ($v) { return true === $v; })
                                                ->then(function ($v) { return '@SonatraSlickGridBundle/Resources/assetic/js/plugins/st.slickgrid.tbmodal.js'; })
                                            ->end()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->arrayNode('sonatra_form_extensions')
                            ->addDefaultsIfNotSet()
                            ->children()
                                ->scalarNode('select2')
                                    ->defaultValue('%kernel.root_dir%/../vendor/sonatra_ivaynberg/select2/select2.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '%kernel.root_dir%/../vendor/sonatra_ivaynberg/select2/select2.js'; })
                                    ->end()
                                ->end()
                                ->scalarNode('datetime_picker')
                                    ->defaultValue('@SonatraFormExtensionsBundle/Resources/assetic/js/datetime-picker.js')
                                    ->beforeNormalization()
                                    ->ifTrue(function ($v) { return true === $v; })
                                        ->then(function ($v) { return '@SonatraFormExtensionsBundle/Resources/assetic/js/datetime-picker.js'; })
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
            ->end()
        ;

        return $node;
    }
}
